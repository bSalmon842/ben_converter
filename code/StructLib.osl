//Basic Material struct for storing everything for a full "material"
struct MaterialAttributes{
	color BaseColor;
	float Metallic;
	float Specular;
	float Roughness;
	float Anisotropy;
	float Opacity;
	float OpacityMask;
	color Emissive;
	color Normal;
	color SubsurfaceColor;
};
//function to mix MaterialAttributes
MaterialAttributes BlendMaterialAttributes(MaterialAttributes x, MaterialAttributes y, float alpha)
{
	MaterialAttributes m;
	float clampedAlpha = clamp(alpha, 0, 1);

	m.BaseColor = mix(x.BaseColor, y.BaseColor, clampedAlpha);
	m.Metallic = mix(x.Metallic, y.Metallic, clampedAlpha);
	m.Specular = mix(x.Specular, y.Specular, clampedAlpha);
	m.Roughness = mix(x.Roughness, y.Roughness, clampedAlpha);
	m.Anisotropy = mix(x.Anisotropy, y.Anisotropy, clampedAlpha);
	m.Opacity = mix(x.Opacity, y.Opacity, clampedAlpha);
	m.OpacityMask = mix(x.OpacityMask, y.OpacityMask, clampedAlpha);
	m.Emissive = mix(x.Emissive, y.Emissive, clampedAlpha);
	m.Normal = mix(x.Normal, y.Normal, clampedAlpha);
	m.SubsurfaceColor = mix(x.SubsurfaceColor, y.SubsurfaceColor, clampedAlpha);

	return m;
}
//End material attribute junk

//uv group structs
struct CoordinateGroup
{
	point uvCoords;
	point uvCoords1;
	point uvCoords2;
	point uvCoords3;
};
